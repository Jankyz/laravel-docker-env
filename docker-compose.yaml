services:
  server:
    build:
      context: .
      dockerfile: dockerfiles/nginx.dockerfile
    ports:
      - '8000:80'
    volumes:
      - ./src:/var/www/html
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php
      - db
    networks:
      - app-network

  php:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    volumes:
      - ./src:/var/www/html:delegated
    networks:
      - app-network

  db:
    image: arm64v8/mysql:oracle
    ports:
      - "3306:3306"
    env_file:
      - env/mysql.env
    networks:
      - app-network

  composer:
    build:
      context: .
      dockerfile: dockerfiles/composer.dockerfile
    volumes:
      - ./src:/var/www/html

  artisan:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    volumes:
      - ./src:/var/www/html
    entrypoint: [ 'php', '/var/www/html/artisan' ]
    depends_on:
      - php
      - db
    networks:
      - app-network

  npm:
    build:
      context: .
      dockerfile: dockerfiles/node.dockerfile
    ports:
      - "3000:3000"
    restart: unless-stopped
    volumes:
      - ./src:/var/www/html
      - /var/www/html/node_modules
    networks:
      - app-network

  adminer:
    image: adminer
    depends_on:
      - db
    ports:
      - "7006:8080"
    volumes:
      - ./dockerfiles/adminer/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
